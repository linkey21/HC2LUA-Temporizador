{"name":"temporizador","type":"virtual_device","properties":{"deviceIcon":28,"currentIcon":"27","log":"","logTemp":"","mainLoop":"--[[ temporizador\n\tDispositivo virtual\n\tmainLoop.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION DE USUARIO -------------------------------------------]]\nlocal iconON = 28\nlocal iconOFF = 27\n--[[----- FIN CONFIGURACION DE USUARIO ---------------------------------------]]\n\n--[[----- NO CAMBIAR EL CODIGO A PARTIR DE AQUI ------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\n--[[function getStaleTimeoOut()\n\nrecuperar el tiempo desde la etiqueta\n--]]\nfunction getStaleTimeoOut()\n\tlocal label = fibaro:get(_selfId,\"ui.timeLabel.value\")\n\tlocal staleTimeoOut\n\tif label and label ~= '' then\n\t\tlocal hour = tonumber(string.sub(label, 1, 2))\n\t\tlocal minute = tonumber(string.sub(label, 4, 5))\n\t\tlocal second = tonumber(string.sub(label, 7, 8))\n\t\treturn (hour * 60 * 60) + (minute * 60) + second\n\tend\n\treturn 0\nend\n\n--[[function gerStatus()\n]]\nfunction getStatus()\n\t-- recuperar el estado actual\n\treturn fibaro:get(_selfId,\"ui.statusLabel.value\")\nend\n\n--[[function setStaleTimeoOut()]]\nfunction setStaleTimeoOut(staleTimeoOut)\n\tif staleTimeoOut < 0 then staleTimeoOut = 0 end\n\tfibaro:debug('temporizador OK '..staleTimeoOut)\n\t-- formatear el tiempo\n\tlocal formatTime = os.date(\"*t\", os.time())\n\tformatTime.hour = 0; formatTime.sec = 0; formatTime.min = 0\n\tformatTime = os.time(formatTime)\n\tformatTime = formatTime + staleTimeoOut\n\tformatTime = os.date('%H:%M:%S', formatTime)\n\t-- actualizar etiqueta de propiedades\n\tfibaro:call(_selfId, \"setProperty\", \"ui.timeLabel.value\", formatTime)\n\tfibaro:log(formatTime)\n\treturn true\nend\n\n-- bucle principal\nwhile true do\n\t-- actualizar icono\n\tfibaro:call(_selfId, 'setProperty', \"currentIcon\", iconOFF)\n\t-- mientras el estado actual sea running\n\twhile getStatus() == 'running' do\n\t\t-- actualizar icono\n\t  fibaro:call(_selfId, 'setProperty', \"currentIcon\", iconON)\n\t\t-- obtener el tiempo restante\n\t\tlocal staleTimeoOut = os.time() + getStaleTimeoOut()\n\t\t-- si se ha agotado el tiempo\n\t\tif staleTimeoOut <= os.time() then\n\t\t\t-- se termina el bucle actualizando el estado\n\t\t\tfibaro:call(_selfId, \"setProperty\", \"ui.statusLabel.value\", 'stopped')\n\t\t\t-- obtener id del dispositivo\n\t\t\tlocal label = fibaro:get(_selfId,\"ui.deviceLabel.value\")\n\t\t\tlocal p2 = string.find(label, '-')\n\t\t\t-- apagar el dispositivo\n\t\t\tfibaro:call(tonumber(string.sub(label, 1, p2 - 1)), 'turnOff')\n\t\t\t-- actualizar icono\n\t\t\tfibaro:call(_selfId, 'setProperty', \"currentIcon\", iconOFF)\n\t\tend\n\t\tfibaro:sleep(1000)\n\t\t-- actualizar etiqueta de tiempo\n\t\t setStaleTimeoOut(staleTimeoOut - os.time())\n\tend\n\t-- watchdog\n\tfibaro:debug('temporizador OK')\n\tfibaro:sleep(1000)\nend\n","ui.deviceLabel.value":"41-Lamparita","ui.statusLabel.value":"stopped","ui.timeLabel.value":"00:00:00","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"","name":"deviceLabel","favourite":false,"main":false}]},{"type":"button","elements":[{"id":2,"lua":true,"waitForResponse":false,"caption":"Select  üëâ","name":"selectButton","empty":false,"msg":"--[[ temporizador\n\tDispositivo virtual\n\tselectButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION DE USUARIO -------------------------------------------]]\n--[[----- FIN CONFIGURACION DE USUARIO ---------------------------------------]]\n\n--[[----- NO CAMBIAR EL CODIGO A PARTIR DE AQUI ------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\n-- obtener conexi√≥n con el controlador\nif not HC2 then\n  HC2 = Net.FHttp(\"127.0.0.1\", 11111)\nend\n\n-- obtener sensores interruptores\nresponse ,status, errorCode = HC2:GET(\"/api/devices?roomID=\"..\n fibaro:getRoomID(_selfId))\nlocal devices = json.decode(response)\nlocal binarySwitches = {}\nfor key, value in pairs(devices) do\n  for actionsKey, actionsValue in pairs(value['actions']) do\n    if actionsKey == 'turnOn' then\n      local binarySwitch = {id = value.id, name = value.name}\n      table.insert(binarySwitches, binarySwitch)\n      break\n    end\n  end\nend\n\n-- averiguar dispositivo seleccioando actualmete\nlocal selectedId = 1\nlocal label = fibaro:get(_selfId,\"ui.deviceLabel.value\")\nfor key, value in pairs(binarySwitches) do\n  if value.id..'-'..value.name == label then selectedId = key end\nend\n-- seleccionar el siguiente dispositivo\nif selectedId < #binarySwitches then\n  selectedId = selectedId + 1\nelseif #binarySwitches == 0 then\n  selectedId = 0\nelse\n  selectedId = 1\nend\n\n-- anotar las etiquetas\nif selectedId ~= 0 then\n  fibaro:call(_selfId,\"setProperty\",\"ui.deviceLabel.value\",\n  binarySwitches[selectedId].id..'-'..binarySwitches[selectedId].name)\nelse\n  fibaro:call(_selfId,\"setProperty\",\"ui.deviceLabel.value\", '-')\nend\n","buttonIcon":0,"favourite":false,"main":true},{"id":3,"lua":false,"waitForResponse":false,"caption":"","name":"button_1_0","empty":true,"msg":"","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"","name":"timeLabel","favourite":false,"main":false}]},{"type":"button","elements":[{"id":5,"lua":true,"waitForResponse":false,"caption":"- ‚è±","name":"downTimeButton","empty":false,"msg":"--[[ temporizador\n\tDispositivo virtual\n\tdownTimeButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION DE USUARIO -------------------------------------------]]\ninterval = 1 -- min.\nmaxTime = 1 -- h.\n--[[----- FIN CONFIGURACION DE USUARIO ---------------------------------------]]\n\n--[[----- NO CAMBIAR EL CODIGO A PARTIR DE AQUI ------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\n-- recuperar el tiempo desde la etiqueta\nlocal label = fibaro:get(_selfId,\"ui.timeLabel.value\")\nlocal staleTimeoOut\nif label and label ~= '' then\n\tlocal p2 = string.find(label, ':')\n\tlocal hour = tonumber(string.sub(label, 1, 2))\n\tlocal minute = tonumber(string.sub(label, 4, 5))\n\tlocal second = tonumber(string.sub(label, 7, 8))\n\tstaleTimeoOut = (hour * 60 * 60) + (minute * 60)\nelse\n\tstaleTimeoOut = 0\nend\n\n--[[ disminuir el tiempo --]]\nif staleTimeoOut >= interval * 60 then\n  -- disminuir intervalo\n  staleTimeoOut = staleTimeoOut - interval * 60\nelse\n  -- situar el tiempo m√°ximo\n  staleTimeoOut = maxTime * 60 * 60\nend\n\n\n--[[ aumentar el tiempo\nif staleTimeoOut  < maxTime * 60 * 60 then\n  -- aumentar el tiempo\n  staleTimeoOut = staleTimeoOut + interval * 60\nelse\n  -- situal ri tiempo m√≠nimo\n  staleTimeoOut = 0\nend\n--]]\n\n-- formatear el tiempo\nlocal formatTime = os.date(\"*t\", os.time())\nformatTime.hour = 0; formatTime.sec = 0; formatTime.min = 0\nformatTime = os.time(formatTime)\nformatTime = formatTime + staleTimeoOut\nformatTime = os.date('%H:%M:%S', formatTime)\n-- actualizar etiqueta de propiedades\nfibaro:call(_selfId, \"setProperty\", \"ui.timeLabel.value\", formatTime)\n","buttonIcon":0,"favourite":false,"main":false},{"id":6,"lua":true,"waitForResponse":false,"caption":"+ ‚è±","name":"upTimeButton","empty":false,"msg":"--[[ temporizador\n\tDispositivo virtual\n\tdownTimeButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION DE USUARIO -------------------------------------------]]\ninterval = 1 -- min.\nmaxTime = 1 -- h.\n--[[----- FIN CONFIGURACION DE USUARIO ---------------------------------------]]\n\n--[[----- NO CAMBIAR EL CODIGO A PARTIR DE AQUI ------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\n-- recuperar el tiempo desde la etiqueta\nlocal label = fibaro:get(_selfId,\"ui.timeLabel.value\")\nlocal staleTimeoOut\nif label and label ~= '' then\n\tlocal p2 = string.find(label, ':')\n\tlocal hour = tonumber(string.sub(label, 1, 2))\n\tlocal minute = tonumber(string.sub(label, 4, 5))\n\tlocal second = tonumber(string.sub(label, 7, 8))\n\tstaleTimeoOut = (hour * 60 * 60) + (minute * 60)\nelse\n\tstaleTimeoOut = 0\nend\n\n--[[ disminuir el tiempo \nif staleTimeoOut >= interval * 60 then\n  -- disminuir intervalo\n  staleTimeoOut = staleTimeoOut - interval * 60\nelse\n  -- situar el tiempo m√°ximo\n  staleTimeoOut = maxTime * 60 * 60\nend\n--]]\n\n--[[ aumentar el tiempo --]]\nif staleTimeoOut  < maxTime * 60 * 60 then\n  -- aumentar el tiempo\n  staleTimeoOut = staleTimeoOut + interval * 60\nelse\n  -- situar el tiempo m√≠nimo\n  staleTimeoOut = 0\nend\n\n-- formatear el tiempo\nlocal formatTime = os.date(\"*t\", os.time())\nformatTime.hour = 0; formatTime.sec = 0; formatTime.min = 0\nformatTime = os.time(formatTime)\nformatTime = formatTime + staleTimeoOut\nformatTime = os.date('%H:%M:%S', formatTime)\n-- actualizar etiqueta de propiedades\nfibaro:call(_selfId, \"setProperty\", \"ui.timeLabel.value\", formatTime)\n","buttonIcon":0,"favourite":false,"main":false},{"id":7,"lua":true,"waitForResponse":false,"caption":"start/stop","name":"startStopButton","empty":false,"msg":"--[[ temporizador\n\tDispositivo virtual\n\tstartStopButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION DE USUARIO -------------------------------------------]]\n--[[----- FIN CONFIGURACION DE USUARIO ---------------------------------------]]\n\n--[[----- NO CAMBIAR EL CODIGO A PARTIR DE AQUI ------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\n-- recuperar el estado actual\nlocal label = fibaro:get(_selfId,\"ui.statusLabel.value\")\n-- obtener id del dispositivo\nlocal idLabel = fibaro:get(_selfId,\"ui.deviceLabel.value\")\nlocal p2 = string.find(idLabel, '-')\nlocal id = tonumber(string.sub(idLabel, 1, p2 - 1))\n-- cambiar el estado\nif label == 'running' then\n\tlabel = 'stopped'\n\t-- apagar el dispositivo\n\tfibaro:call(id, 'turnOff')\nelse\n\tlabel = 'running'\n\t-- encender el dispositivo\n\tfibaro:call(id, 'turnOn')\nend\n\n-- actualizar etiqueta de propiedades\nfibaro:call(_selfId, \"setProperty\", \"ui.statusLabel.value\", label)\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":8,"lua":false,"waitForResponse":false,"caption":"","name":"statusLabel","favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}